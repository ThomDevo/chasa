/*---Default---*/
defaultpage.title = Chasa
defaultpage.content = Contenu
home.title = Home
welcomeonyourpage = Welcome

/*---Logo---*/
logo.title = CHASA

/*---Connection-Page---*/
connectionpage.title = Connection
connectionpage.error.message = The number and/or the password entered are invalid
connectionpage.lifrasNumber.title = Lifras Number
connectionpage.lifrasNumber.placeholder = Please enter your Lifras Number
connectionpage.password.title = Password
connectionpage.password.placeholder = Please enter your password
connectionpage.submit.button = Connect
connectionpage.return.button = Return

/*---PopUp---*/
license = The license
user = The user
Event = The event of
category = and of category
of = of
certificateMedical = The medical certificate of type
andDate = and with begin date of
listOfPermissionsof = The list of permissions for the role
TheRole = The Role
addPlanning = has been added to your planning
deletePlanning = has been removed from your planning
Person = The person named
add = has been created
update = has been properly updated
delete = has been removed

/*---Header---*/
header.language = Language
header.language.fr = French
header.language.en = English

/*---Footer---*/
footer.copyright = CHASA©2023 Website maked by DEBETANCOURT Daphné and DEVOGELAERE Thomas.

/*---Menu---*/
menu.data.users = User menu
menu.own.data.users = My Data
menu.own.data.users.modify = Modify my data
menu.own.data.users.consult = My data
menu.data.membre = Consult data of members
menu.data.member.add = Create a new member
menu.data.member.modify = Modify data of members
menu.data.member.consult = Consult the list of members
menu.data.instructor = Consult data of users
menu.data.instructor.add = Create a new User
menu.data.instructor.modify = Modify data of Members
menu.data.instructor.consult = Consult the list of Users
menu.data.user.certificate = Licenses
menu.own.certificate.users = My licenses 
menu.own.data.certificate.add = Create a certificate for a user
menu.data.certificate.modify = Modify a certificate for a user
menu.data.certificate.list = List of the user's certificate
menu.events = Events
menu.data.events = List of events
menu.data.events.add = Add an event
menu.data.events.modify = List of upcoming events
menu.data.events.consult = Consult an event
menu.data.events.participate = Subscribe to an event
menu.divingSite = Diving sites
menu.divingSite.settings = List of diving sites
menu.divingSite.settings.add = Create a diving site
menu.divingSite.settings.modify = Modify a diving site
menu.divingSite.settings.consult = Consult a diving site
menu.divingSite.characteristics = Characteristics of diving sites
menu.divingSite.characteristics.add = Create a characteristic of a diving site
menu.divingSite.characteristics.modify = Modify a characteristic of a diving site
menu.divingSite.characteristics.consult = Consult characteristics of a diving site
menu.chasa = Management of Chasa
menu.chasa.role.add = Create a role
menu.chasa.role.modify = Update a role
menu.chasa.role.consult = List of roles
menu.data.user.medical = Medical data
menu.data.user.medical.mine = My medical certificates
menu.data.user.medical.membre.add = Create a medical certificate for a membre
menu.data.user.medical.membre.modify = Modify a medical certificate for a membre
menu.data.user.medical.membre.list = List of medical data for membres
menu.data.user.medical.instructor.add = Create a medical certificate
menu.data.user.medical.instructor.modify = Modify a medical certificate
menu.data.user.medical.instructor.list = List of medical data
menu.address = Addresses
menu.data.address.List = List of the addresses
menu.chasa.rolePermission.modify = List of roles and related permissions
menu.chasa.rolePermission.add = Create a list of permissions for a role
menu.data.events.myParticipation = My future participations

/*---addRoleForm---*/
rolepage.addRoletitle = Create a role
rolepage.addRole = Create a role
rolepage.roleLabel = Name of the role : 
rolepage.roleLabel.placeholder = the name of the role must have a minimum of 2 characters
rolepage.roleLabel.errorMessage = This label cannot be empty and contain a minimum of 2 characters
application.create.role = Create a role
rolepage.updateRoleTitle = Update a role
application.update.role = Update the role

/*---ListOfRoles---*/
rolepage.ListOfRoles = List of roles
rolepage.ListOfRoles.label = Label
rolepage.ListOfRoles.action = Action
role.listOfPermissions = list of permissions for this role

/*---Err-Message---*/
ConnectionPage.errorMessageLogin = The Lifras number cannot be empty and must have a maximum of 5 digits
messageErrorRoleName = the role already exists in the database

/*---Filter---*/
listPage.messageErrorResearch = Research need to be less than 60 character and without special character
listPage.filter = Enter your search term

/*---ListOfUsers---*/
rolepage.ListOfUSers.lifrasNumber = Lifras Number
rolepage.ListOfUSers.Name = Last Name
rolepage.ListOfUSers.firstName = First name
rolepage.ListOfUSers.birthDate = Date of birth
rolepage.ListOfUSers.sex = Sex
rolepage.ListOfUSers.email = Email
rolepage.ListOfUSers.role = Role
menu.licenseUser.delete = Delete the license user
menu.licenseMember.delete = Delete the license member

/*---addUser---*/
userPage.addUser = Create a user
userPage.updateUser = Update a user
userPage.lastName = Last Name
userPage.lastName.placeholder = The last name must have a minimum of 2 characters and start with an upper case character
userPage.lastName.errorMessage = This label cannot be empty and contain a minimum of 2 characters and start with an upper case character
messageErrorLastName = The last name must have a minimum of 2 characters and start with an upper case character
userPage.firstName = First name
userPage.firstName.placeholder = The first name must have a minimum of 2 characters and start with an upper case character
messageErrorFirstName = This label cannot be empty and contain a minimum of 2 characters and start with an upper case character
userPage.birthDate = Date of birth
messageErrorBirthName = The user must have a minimum of 8 years old
userPage.sex = Sex
userPage.email = Email address
userPage.email.placeholder = The email address must be like XXX@XXX.XXX
userPage.email.errorMessage = The email address must be like XXX@XXX.XXX
messageErrorEmail = The email address already exists in the database
application.create.user = Create the user
userPage.phoneNumber = Phone number
userPage.phoneNumber.placeholder = The phone number must contain only numbers
userPage.phoneNumber.errorMessage = The phone number must contain only numbers
messageErrorPhoneNumber = The phone number must contain only numbers
messageErrorPhoneNumberLenght = The phone number must contain between 9 and 17 digits
userPage.LifrasNumber = Lifras Number
userPage.lifrasNumber.placeholder = The Lifras Number contain only digits
userPage.lifrasNumber.errorMessage = The Lifras Number must contain between 1 and 5 digits
messageErrorLifrasNumber = The lifras Number already exists in the database
userPage.Password = Password
userPage.password.placeholder = The password must contain a minimum of 8 characters with a UpperCase Letter, a special character and a number
userPage.Password.errorMessage = The password must contain a minimum of 8 characters with a UpperCase Letter, a special character and a number
messageErrorPassword = The two passwords are not the same
userPage.status = Status
userPage.Active = Active
userPage.Inactive = Inactive
userPage.role = Create a Role
userPage.role.select = Select a Role
userPage.role.select.name = Search a Role
userPage.user = Select a user
licenseUser = Licenses of the user
licenseUser.select = Select the licenses
lifrasNumber = Lifras Number
lastName = Lastname
firstName = Firstname
phoneNumber = Phone
user.License = Update the list of the licenses' user
messageErrorUserExists = This Lifras number already exists in the Database

/*---Update User---*/
application.update.user = Update a user
userPage.addMember = Create a Member
application.create.Member = Create the member
application.update.member = Update the member

/*---List Of Addresses---*/
menu.data.address.List.street = Street
menu.data.address.List.number = Number
menu.data.address.List.box = Box
menu.data.address.List.idCity = City
menu.chasa.Addresses.modify = Address
addresspage.addAddresstitle = Create an address

/*---Create and address---*/
addressPage.street = Name of street
addressPage.street.placeholder = Please enter a name of street
addressPage.street.errorMessage = The name of street must contain a minimum of two characters and begin by an uppercase character
messageErrorStreet = The name of street must contain a minimum of two characters and begin by an uppercase character
addressPage.number = Number
addressPage.number.placeholder = Please enter a number
addressPage.number.errorMessage = The number must be greater then 0
messageErrornumber = The number must be greater then 0
addressPage.box = Box
addressPage.box.placeholder = Please enter the box
addressPage.city = City
addressPage.city.select = City
application.create.Address = Create an address
addressPage.city.postalCode = Postal Code
application.update.Address = Update the address

/*---AddLicenseUser---*/
menu.license.user.consult = Consult the licenses of the users
menu.licenseUser.modify = modify the license of the user
ListOfUSers.licenseUser = List of license
ListOfUSers.licenseDate = Date of license
licenseUser.add.user = Create a license for a user
licenseUser.add.user.lifrasNumber = Lifras Number
licenseUser.add.user.LastName = LastName
licenseUser.add.user.firstName = FirstName
licenseUser.add.license = Create a license
licenseUser.add.AdmissionDate = The obtention date of the license
messageErrorAdmissionDate = The obtention date of the license cannot be int the future
application.create.licenseUser = Create the license
application.update.licenseUser = Update the license
menu.license.Member.consult = Consult the licenses of the members
userPage.myLicense = My licenses
messageErrorExists = This license already exists for this person
licenseUser.update.user = Update the user's license
licenseUser.update.member = Update the member's license'
select.user = User

/*---AddMedicalCertificate---*/
menu.medicalCertificates.user.consult = Consult the medical certificates of the users
ListofUSers.issueDate = Issue Date
ListOfUSers.expiryDate = Expiry Date
ListOfUSers.certificateType = Type of Medical Certificate
medicalCertificate.add = Create a medical certificate
User.add.MedicalCertificateType = Create a type of Medical Certificate
User.add.MedicalCertificateType.issuedDate = Date of obtention of the certificate medical
messageErrorIssueDate = The issue date cannot be in the future
User.add.MedicalCertificateType.ExpiryDate = Date of expiration of the certificate medical
messageErrorExpiryDatePast = The expiration date cannot be in the past
messageErrorExpiryDate = The expiration date cannot be before the issue date
application.create.medicalCertificate = Create a certificate medical
medicalCertificate.update = Update a medical certificate
menu.medicalCertificates.Member.consult = Consult the list of the medical certificate of users
application.update.medicalCertificate = Update the medical certificate
licenseMember.add.license = Create a license for a member
messageErrorExist = This certificate already exists in the database

/*---AddRolePermission---*/
add.rolePermission = Create permissions for a role
select.role = Select A role
select.permission = select the permission(s)
role = Name of the role 
update.rolePermission = update the list op permissions for this role 

/*---AddEvent---*/
select.category = Select a category 
select.address = Select a meeting address 
Events.dateTime = Select a date and time 
messageErrorDateTimeEvent = The date cannot be before now 
Events.maxPersons = The maximum number of persons 
Events.Price = Price of the event in euros 
select.license = Select a license minimal (optional) 
select.diveSites = Select a Diving Site (optionnel) 
listOfEvents = List of Events
date.event = Date of event
event.modify = Update the event
maxNumPeople.event = Maximum number of people
price.event = Price
gatheringAddress.event = Meeting address
License.event = Minimal license
diveSite.event = Dive site
category.event = Category of event
event.NumberOfUsers = Number of participants : 
messageErrorEventDiveSite = This category of event requires a dive site
messageErrorEventDiveSiteselect = This category does not require a dive site
event.Event = The event of 

/*---AddUserEvent---*/
Add.userEvent = Validate my participation
listOfMyEvents = List of my future events
menu.data.events.delete = Cancel my participation
event.countUser = Consult the list of participants per event
date.subscription = Subscription

/*---mail---*/
membre = Dear Chasa Member,\nWe are organizing an event on
membreupdate = Dear Chasa Member\nWe have updated the event for 
membreDelete = Dear Chasa Member\nWe have deleted the event for 
subject = Event on
at = at
summary = CHASA : invitation to our event 
addressmeet = Meeting address 
characteristic.diveSite = Characteristics of the dive site
addressDiveSite = Address of the dive site
addressHyperbare = Address of the hyperbaric chamber
hyperbareName = Name of the hyperbaric chamber
reminder = Reminder: For diving, you must have a medical certificate for all events and have cash on hand when you arrive 
bubbles = Happy Bubbles to all